####################################################
# ServUP  Copyright (C) 2025  S2009                #
# LICENSE: GPL-3.0                                 #
# Source Code: https://github.com/S2009-dev/ServUP #
####################################################

name: ServUP Deployment
description: Upload an artifact from Github Actions to a server using SSH
author: S2009

branding:
  icon: upload-cloud
  color: blue

inputs:
  artifact:
    description: 'Name of the artifact to upload (ex: my-artifact)'
    required: true
    type: string
  run-id:
    description: 'Run ID of the workflow that generated the artifact'
    required: true
    type: string
  remote:
    description: 'Path to the remote directory where the artifact will be uploaded (only folders in "/var/lib/servup" are supported)'
    required: true
    type: string
  deploy-cmd:
    description: 'Command to run after the artifact is uploaded in order to deploy it (see the documentation for more information)'
    required: true
    type: string

runs:
  using: 'composite'
  steps:
    - name: Download artifact
      uses: actions/download-artifact@v5
      with:
        name: ${{ inputs.artifact }}
        github-token: ${{ env.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        run-id: ${{ inputs.run-id }}

    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ env.SSH_PRIVATE_KEY }}

    - name: Create remote directory
      shell: bash
      run: |
        ssh -o StrictHostKeyChecking=no \
            -p ${{ env.SSH_PORT }} \
            servup@${{ env.SSH_HOST }} \
            "mkdir -p \"${{ inputs.remote }}\""

    - name: Upload artifact
      shell: bash
      run: |
        scp -o StrictHostKeyChecking=no \
            -P ${{ env.SSH_PORT }} \
            ${{ inputs.artifact }}.zip \
            servup@${{ env.SSH_HOST }}:${{ inputs.remote }}

    - name: Extract artifact
      shell: bash
      run: |
        ssh -o StrictHostKeyChecking=no \
            -p ${{ env.SSH_PORT }} \
            servup@${{ env.SSH_HOST }} \
            "cd \"${{ inputs.remote }}\" && unzip -o \"${{ inputs.artifact }}\" && rm \"${{ inputs.artifact }}.zip\""

    - name: Deploy artifact
      shell: bash
      run: |
        ssh -o StrictHostKeyChecking=no \
            -p ${{ env.SSH_PORT }} \
            servup@${{ env.SSH_HOST }} \
            "${{ inputs.deploy-cmd }}"

    - name: Cleanup
      shell: bash
      run: |
        ssh -o StrictHostKeyChecking=no \
            -p ${{ env.SSH_PORT }} \
            servup@${{ env.SSH_HOST }} \
            "rm -drf \"${{ inputs.remote }}\""